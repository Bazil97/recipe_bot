Starting infrastructure deployment...
[0m[1mInitializing the backend...[0m
[0m[1mInitializing modules...[0m
[0m[1mInitializing provider plugins...[0m
- Reusing previous version of hashicorp/aws from the dependency lock file
- Using previously-installed hashicorp/aws v5.94.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.ecr.aws_ecr_repository.this[0m will be created
[0m  [32m+[0m[0m resource "aws_ecr_repository" "this" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m image_tag_mutability = "MUTABLE"
      [32m+[0m[0m name                 = "recipebot-lambda"
      [32m+[0m[0m registry_id          = (known after apply)
      [32m+[0m[0m repository_url       = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "environment" = "dev"
          [32m+[0m[0m "owner"       = "csb"
          [32m+[0m[0m "project"     = "recipebot"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "environment" = "dev"
          [32m+[0m[0m "owner"       = "csb"
          [32m+[0m[0m "project"     = "recipebot"
        }

      [32m+[0m[0m image_scanning_configuration {
          [32m+[0m[0m scan_on_push = true
        }
    }

[1m  # module.iam.aws_iam_role.lambda_exec[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "lambda_exec" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "lambda.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "recipebot_lambda_execution_role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)

      [32m+[0m[0m inline_policy (known after apply)
    }

[1m  # module.iam.aws_iam_role_policy_attachment.lambda_logging[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "lambda_logging" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      [32m+[0m[0m role       = "recipebot_lambda_execution_role"
    }

[1m  # module.lambda.aws_lambda_function.this[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "this" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m function_name                  = "recipebot-lambda"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m image_uri                      = "123456789012.dkr.ecr.eu-west-1.amazonaws.com/recipebot-lambda:latest"
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 128
      [32m+[0m[0m package_type                   = "Image"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = (known after apply)
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = (known after apply)
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags_all                       = (known after apply)
      [32m+[0m[0m timeout                        = 10
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = {
              [32m+[0m[0m "OPENAI_API_KEY" = (sensitive value)
            }
        }

      [32m+[0m[0m ephemeral_storage (known after apply)

      [32m+[0m[0m logging_config (known after apply)

      [32m+[0m[0m tracing_config (known after apply)
    }

[1m  # module.s3.aws_s3_bucket.this[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "recipebot-deploy-dev"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "environment" = "dev"
          [32m+[0m[0m "owner"       = "csb"
          [32m+[0m[0m "project"     = "recipebot"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "environment" = "dev"
          [32m+[0m[0m "owner"       = "csb"
          [32m+[0m[0m "project"     = "recipebot"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)

      [32m+[0m[0m cors_rule (known after apply)

      [32m+[0m[0m grant (known after apply)

      [32m+[0m[0m lifecycle_rule (known after apply)

      [32m+[0m[0m logging (known after apply)

      [32m+[0m[0m object_lock_configuration (known after apply)

      [32m+[0m[0m replication_configuration (known after apply)

      [32m+[0m[0m server_side_encryption_configuration (known after apply)

      [32m+[0m[0m versioning (known after apply)

      [32m+[0m[0m website (known after apply)
    }

[1m  # module.s3.aws_s3_bucket_server_side_encryption_configuration.this[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_server_side_encryption_configuration" "this" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m apply_server_side_encryption_by_default {
              [32m+[0m[0m sse_algorithm     = "AES256"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.s3.aws_s3_bucket_versioning.this[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_versioning" "this" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)

      [32m+[0m[0m versioning_configuration {
          [32m+[0m[0m mfa_delete = (known after apply)
          [32m+[0m[0m status     = "Enabled"
        }
    }

[1mPlan:[0m 7 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m bucket_name          = "recipebot-deploy-dev"
  [32m+[0m[0m ecr_repository_url   = (known after apply)
  [33m~[0m[0m lambda_function_name = "recipe-bot-lambda" [33m->[0m[0m "recipebot-lambda"
[0m[1mmodule.ecr.aws_ecr_repository.this: Creating...[0m[0m
[0m[1mmodule.iam.aws_iam_role.lambda_exec: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket.this: Creating...[0m[0m
[0m[1mmodule.ecr.aws_ecr_repository.this: Creation complete after 0s [id=recipebot-lambda][0m
[0m[1mmodule.s3.aws_s3_bucket.this: Creation complete after 1s [id=recipebot-deploy-dev][0m
[0m[1mmodule.s3.aws_s3_bucket_versioning.this: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket_server_side_encryption_configuration.this: Creating...[0m[0m
[0m[1mmodule.s3.aws_s3_bucket_server_side_encryption_configuration.this: Creation complete after 1s [id=recipebot-deploy-dev][0m
[0m[1mmodule.s3.aws_s3_bucket_versioning.this: Creation complete after 2s [id=recipebot-deploy-dev][0m
[31m╷[0m[0m
[31m│[0m [0m[1m[31mError: [0m[0m[1mcreating IAM Role (recipebot_lambda_execution_role): operation error IAM: CreateRole, https response error StatusCode: 409, RequestID: 00153a49-bf5e-4c23-ac63-6bed5d7ba177, EntityAlreadyExists: Role with name recipebot_lambda_execution_role already exists.[0m
[31m│[0m [0m
[31m│[0m [0m[0m  with module.iam.aws_iam_role.lambda_exec,
[31m│[0m [0m  on modules\iam\main.tf line 1, in resource "aws_iam_role" "lambda_exec":
[31m│[0m [0m   1: resource "aws_iam_role" "lambda_exec" [4m{[0m[0m
[31m│[0m [0m
[31m╵[0m[0m
